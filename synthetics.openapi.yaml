openapi: 3.0.0
info:
  title: Synthetics Monitoring API
  version: 202101beta1
  contact:
    name: Kentik API Engineering
    url: https://github.com/kentik/api
tags:
  - name: SyntheticsDataService
  - name: SyntheticsAdminService
paths:
  /synthetics/v202101beta1/agents:
    get:
      summary: List Agents.
      description: Returns a list of agents.
      operationId: AgentsList
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1ListAgentsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      tags:
        - SyntheticsAdminService
  "/synthetics/v202101beta1/agents/{agent.id}":
    patch:
      summary: Patch an agent.
      description: Partially Updates the attributes of agent specified with id and
        update_mask fields.
      operationId: AgentPatch
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1PatchAgentResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: agent.id
          description: id of this agent.
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1PatchAgentRequest"
        required: true
      tags:
        - SyntheticsAdminService
    get:
      summary: Get information about an agent.
      description: Returns information about the agent specified with id.
      operationId: AgentGet
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1GetAgentResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: agent.id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SyntheticsAdminService
    delete:
      summary: Delete an agent.
      description: Deletes the agent specified with id.
      operationId: AgentDelete
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1DeleteAgentResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: agent.id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SyntheticsAdminService
  /synthetics/v202101beta1/health/tests:
    post:
      summary: Get health status for synthetics test.
      description: Get synthetics health test for login user. Also returns mesh data on
        request.
      operationId: GetHealthForTests
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1GetHealthForTestsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1GetHealthForTestsRequest"
        required: true
      tags:
        - SyntheticsDataService
  /synthetics/v202101beta1/tests:
    get:
      summary: List Synthetics Tests.
      description: Returns a list of syntehtics tests.
      operationId: TestsList
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1ListTestsResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: preset
          in: query
          required: false
          schema:
            type: boolean
      tags:
        - SyntheticsAdminService
    post:
      summary: Create Synthetics Test.
      description: Create synthetics test from request. Returns created test.
      operationId: TestCreate
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1CreateTestResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1CreateTestRequest"
        required: true
      tags:
        - SyntheticsAdminService
  "/synthetics/v202101beta1/tests/{id}":
    get:
      summary: Get information about Synthetics Test.
      description: Returns information about synthetics test specified with test ID.
      operationId: TestGet
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1GetTestResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SyntheticsAdminService
    delete:
      summary: Delete an Synthetics Test.
      description: Deletes the synthetics test specified with id.
      operationId: TestDelete
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1DeleteTestResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      tags:
        - SyntheticsAdminService
    patch:
      summary: Patch a Synthetics Test.
      description: Partially Updates the attributes of synthetics test specified with id
        and update_mask fields.
      operationId: TestPatch
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1PatchTestResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1PatchTestRequest"
        required: true
      tags:
        - SyntheticsAdminService
  "/synthetics/v202101beta1/tests/{id}/results/trace":
    post:
      summary: Get trace route data.
      description: Get trace route data for the specific test id.
      operationId: GetTraceForTest
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1GetTraceForTestResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          description: Test id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1GetTraceForTestRequest"
        required: true
      tags:
        - SyntheticsDataService
  "/synthetics/v202101beta1/tests/{id}/status":
    put:
      summary: Update a test status.
      description: Update the status of a test.
      operationId: TestStatusUpdate
      responses:
        "200":
          description: A successful response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/v202101beta1SetTestStatusResponse"
        default:
          description: An unexpected error response.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/rpcStatus"
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/v202101beta1SetTestStatusRequest"
        required: true
      tags:
        - SyntheticsAdminService
security:
  - email: []
    token: []
externalDocs:
  description: More about Kentik APIs
  url: https://docs.kentik.com/api
components:
  securitySchemes:
    email:
      type: apiKey
      name: X-CH-Auth-Email
      in: header
    token:
      type: apiKey
      name: X-CH-Auth-API-Token
      in: header
  schemas:
    protobufAny:
      type: object
      properties:
        typeUrl:
          type: string
        value:
          type: string
          format: byte
    rpcStatus:
      type: object
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
        details:
          type: array
          items:
            $ref: "#/components/schemas/protobufAny"
    v202101beta1ASN:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
    v202101beta1Agent:
      type: object
      properties:
        agentImpl:
          type: string
        id:
          type: string
          description: id of this agent.
        name:
          type: string
        status:
          $ref: "#/components/schemas/v202101beta1AgentStatus"
        alias:
          type: string
        type:
          type: string
        os:
          type: string
        ip:
          type: string
        lat:
          type: number
          format: double
        long:
          type: number
          format: double
        lastAuthed:
          type: string
          format: date-time
        family:
          $ref: "#/components/schemas/v202101beta1IPFamily"
        asn:
          type: integer
          format: int64
        siteId:
          type: string
        version:
          type: string
        challenge:
          type: string
        city:
          type: string
        region:
          type: string
        country:
          type: string
        testIds:
          type: array
          items:
            type: string
        localIp:
          type: string
        cloudVpc:
          type: string
    v202101beta1AgentHealth:
      type: object
      properties:
        agent:
          $ref: "#/components/schemas/v202101beta1Agent"
        health:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1HealthMoment"
        overallHealth:
          $ref: "#/components/schemas/v202101beta1Health"
    v202101beta1AgentStatus:
      type: string
      enum:
        - AGENT_STATUS_UNSPECIFIED
        - AGENT_STATUS_OK
        - AGENT_STATUS_WAIT
        - AGENT_STATUS_DELETED
      default: AGENT_STATUS_UNSPECIFIED
    v202101beta1AgentTaskConfig:
      type: object
      properties:
        id:
          type: string
          format: uint64
        targets:
          type: array
          items:
            type: string
    v202101beta1AgentTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1City:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        latitude:
          type: number
          format: double
        longitude:
          type: number
          format: double
    v202101beta1Country:
      type: object
      properties:
        code:
          type: string
        name:
          type: string
    v202101beta1CreateTestRequest:
      type: object
      properties:
        test:
          $ref: "#/components/schemas/v202101beta1Test"
    v202101beta1CreateTestResponse:
      type: object
      properties:
        test:
          $ref: "#/components/schemas/v202101beta1Test"
    v202101beta1DNS:
      type: object
      properties:
        name:
          type: string
    v202101beta1DNSTaskDefinition:
      type: object
      properties:
        target:
          type: string
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        port:
          type: integer
          format: int64
        type:
          type: string
        resolver:
          type: string
    v202101beta1DeleteAgentResponse:
      type: object
    v202101beta1DeleteTestResponse:
      type: object
    v202101beta1DnsTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1FlowTest:
      type: object
      properties:
        target:
          type: string
        targetRefreshIntervalMillis:
          type: integer
          format: int64
        maxTasks:
          type: integer
          format: int64
        type:
          type: string
        inetDirection:
          type: string
        direction:
          type: string
    v202101beta1Geo:
      type: object
      properties:
        country:
          $ref: "#/components/schemas/v202101beta1Country"
        region:
          $ref: "#/components/schemas/v202101beta1Region"
        city:
          $ref: "#/components/schemas/v202101beta1City"
    v202101beta1GetAgentResponse:
      type: object
      properties:
        agent:
          $ref: "#/components/schemas/v202101beta1Agent"
    v202101beta1GetHealthForTestsRequest:
      type: object
      properties:
        ids:
          type: array
          items:
            type: string
          description: List of ids of the tests to get health for.
        startTime:
          type: string
          format: date-time
          description: Start of the time interval for this query.
        endTime:
          type: string
          format: date-time
          description: End of the time interval for this query.
        agentIds:
          type: array
          items:
            type: string
          title: Optionally, only look at a subset of agents
        taskIds:
          type: array
          items:
            type: string
          description: Optionally only look at a subset of tasks -- this lets you limit
            targets.
        augment:
          type: boolean
    v202101beta1GetHealthForTestsResponse:
      type: object
      properties:
        health:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1TestHealth"
    v202101beta1GetTestResponse:
      type: object
      properties:
        test:
          $ref: "#/components/schemas/v202101beta1Test"
    v202101beta1GetTraceForTestRequest:
      type: object
      properties:
        id:
          type: string
          title: Test id
        startTime:
          type: string
          format: date-time
          description: Start of the time interval for this query.
        endTime:
          type: string
          format: date-time
          description: End of the time interval for this query.
        agentIds:
          type: array
          items:
            type: string
          title: Optionally, limit the query to these agent ids
        targetIps:
          type: array
          items:
            type: string
          title: Optionally, limit the query to these destination IP addresses
    v202101beta1GetTraceForTestResponse:
      type: object
      properties:
        ipInfo:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1IPInfo"
        traceRoutes:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1TracerouteResult"
    v202101beta1GridTest:
      type: object
      properties:
        targets:
          type: array
          items:
            type: string
    v202101beta1HTTPConfig:
      type: object
      properties:
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        method:
          type: string
        headers:
          type: object
          additionalProperties:
            type: string
        body:
          type: string
        ignoreTlsErrors:
          type: boolean
    v202101beta1HTTPTaskDefinition:
      type: object
      properties:
        target:
          type: string
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
    v202101beta1Health:
      type: object
      properties:
        health:
          type: string
        time:
          type: string
          format: date-time
    v202101beta1HealthMoment:
      type: object
      properties:
        time:
          type: string
          format: date-time
        srcIp:
          type: string
        dstIp:
          type: string
        packetLoss:
          type: number
          format: double
        avgLatency:
          type: integer
          format: int64
        avgWeightedLatency:
          type: integer
          format: int64
        rollingAvgLatency:
          type: integer
          format: int64
        rollingStddevLatency:
          type: integer
          format: int64
        rollingAvgWeightedLatency:
          type: integer
          format: int64
        latencyHealth:
          type: string
        packetLossHealth:
          type: string
        overallHealth:
          $ref: "#/components/schemas/v202101beta1Health"
        avgJitter:
          type: integer
          format: int64
          title: fields returned from backend grpc service
        rollingAvgJitter:
          type: integer
          format: int64
        rollingStdJitter:
          type: integer
          format: int64
        jitterHealth:
          type: string
        data:
          type: string
        size:
          type: integer
          format: int64
        status:
          type: integer
          format: int64
        taskType:
          type: string
    v202101beta1HealthSettings:
      type: object
      properties:
        latency_critical_stddev:
          type: integer
        latencyCriticalStddev:
          type: integer
        latencyWarningStddev:
          type: integer
        jitterCriticalStddev:
          type: integer
        jitterWarningStddev:
          type: integer
        httpLatencyCriticalStddev:
          type: integer
        httpLatencyWarningStddev:
          type: integer
        latencyCritical:
          type: number
          format: float
        latencyWarning:
          type: number
          format: float
        packetLossCritical:
          type: number
          format: float
        packetLossWarning:
          type: number
          format: float
        jitterCritical:
          type: number
          format: float
        jitterWarning:
          type: number
          format: float
        httpLatencyCritical:
          type: number
          format: float
        httpLatencyWarning:
          type: number
          format: float
        httpValidCodes:
          type: array
          items:
            type: integer
            format: int64
        dnsValidCodes:
          type: array
          items:
            type: integer
            format: int64
    v202101beta1HostnameTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1IPFamily:
      type: string
      enum:
        - IP_FAMILY_UNSPECIFIED
        - IP_FAMILY_V4
        - IP_FAMILY_V6
        - IP_FAMILY_DUAL
      default: IP_FAMILY_UNSPECIFIED
    v202101beta1IPInfo:
      type: object
      properties:
        ip:
          type: string
        asn:
          $ref: "#/components/schemas/v202101beta1ASN"
        geo:
          $ref: "#/components/schemas/v202101beta1Geo"
        dns:
          $ref: "#/components/schemas/v202101beta1DNS"
    v202101beta1IpTest:
      type: object
      properties:
        targets:
          type: array
          items:
            type: string
    v202101beta1KnockTaskDefinition:
      type: object
      properties:
        target:
          type: string
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        port:
          type: integer
          format: int64
    v202101beta1ListAgentsResponse:
      type: object
      properties:
        agents:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1Agent"
        invalidAgentsCount:
          type: integer
          format: int64
    v202101beta1ListTestsResponse:
      type: object
      properties:
        tests:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1Test"
        invalidTestsCount:
          type: integer
          format: int64
    v202101beta1MeshColumn:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        alias:
          type: string
        target:
          type: string
        metrics:
          $ref: "#/components/schemas/v202101beta1MeshMetrics"
        health:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1MeshMetrics"
    v202101beta1MeshMetric:
      type: object
      properties:
        name:
          type: string
        health:
          type: string
        value:
          type: string
          format: int64
    v202101beta1MeshMetrics:
      type: object
      properties:
        time:
          type: string
          format: date-time
        latency:
          $ref: "#/components/schemas/v202101beta1MeshMetric"
        packetLoss:
          $ref: "#/components/schemas/v202101beta1MeshMetric"
        jitter:
          $ref: "#/components/schemas/v202101beta1MeshMetric"
    v202101beta1MeshResponse:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        localIp:
          type: string
        ip:
          type: string
        alias:
          type: string
        columns:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1MeshColumn"
    v202101beta1PatchAgentRequest:
      type: object
      properties:
        agent:
          $ref: "#/components/schemas/v202101beta1Agent"
        mask:
          type: string
          title: CSV values of fields follow the path of Agent object with dot
            notation (ie. "agent.alias,export.type")
    v202101beta1PatchAgentResponse:
      type: object
      properties:
        agent:
          $ref: "#/components/schemas/v202101beta1Agent"
    v202101beta1PatchTestRequest:
      type: object
      properties:
        test:
          $ref: "#/components/schemas/v202101beta1Test"
        mask:
          type: string
          title: CSV values of fields follow the path of Test object with dot
            notation (ie. "test.name,test.settings")
    v202101beta1PatchTestResponse:
      type: object
      properties:
        test:
          $ref: "#/components/schemas/v202101beta1Test"
    v202101beta1PingTaskDefinition:
      type: object
      properties:
        target:
          type: string
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
    v202101beta1Region:
      type: object
      properties:
        id:
          type: string
          format: int64
        name:
          type: string
    v202101beta1SetTestStatusRequest:
      type: object
      properties:
        id:
          type: string
        status:
          $ref: "#/components/schemas/v202101beta1TestStatus"
    v202101beta1SetTestStatusResponse:
      type: object
    v202101beta1ShakeTaskDefinition:
      type: object
      properties:
        target:
          type: string
        port:
          type: integer
          format: int64
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
    v202101beta1SiteTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1TagTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1Task:
      type: object
      properties:
        id:
          type: string
        testId:
          type: string
        deviceId:
          type: string
        state:
          $ref: "#/components/schemas/v202101beta1TaskState"
        status:
          type: string
        family:
          $ref: "#/components/schemas/v202101beta1IPFamily"
        ping:
          $ref: "#/components/schemas/v202101beta1PingTaskDefinition"
        traceroute:
          $ref: "#/components/schemas/v202101beta1TraceTaskDefinition"
        http:
          $ref: "#/components/schemas/v202101beta1HTTPTaskDefinition"
        knock:
          $ref: "#/components/schemas/v202101beta1KnockTaskDefinition"
        dns:
          $ref: "#/components/schemas/v202101beta1DNSTaskDefinition"
        shake:
          $ref: "#/components/schemas/v202101beta1ShakeTaskDefinition"
    v202101beta1TaskHealth:
      type: object
      properties:
        task:
          $ref: "#/components/schemas/v202101beta1Task"
        agents:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1AgentHealth"
        overallHealth:
          $ref: "#/components/schemas/v202101beta1Health"
        targetAgent:
          $ref: "#/components/schemas/v202101beta1Agent"
    v202101beta1TaskState:
      type: string
      enum:
        - TASK_STATE_UNSPECIFIED
        - TASK_STATE_CREATED
        - TASK_STATE_UPDATED
        - TASK_STATE_DELETED
      default: TASK_STATE_UNSPECIFIED
    v202101beta1Test:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        type:
          type: string
        deviceId:
          type: string
        status:
          $ref: "#/components/schemas/v202101beta1TestStatus"
        settings:
          $ref: "#/components/schemas/v202101beta1TestSettings"
        expiresOn:
          type: string
          format: date-time
        cdate:
          type: string
          format: date-time
        edate:
          type: string
          format: date-time
        createdBy:
          $ref: "#/components/schemas/v202101beta1UserInfo"
        lastUpdatedBy:
          $ref: "#/components/schemas/v202101beta1UserInfo"
    v202101beta1TestHealth:
      type: object
      properties:
        testId:
          type: string
        tasks:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1TaskHealth"
        overallHealth:
          $ref: "#/components/schemas/v202101beta1Health"
        healthTs:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1Health"
        agentTaskConfig:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1AgentTaskConfig"
        mesh:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1MeshResponse"
    v202101beta1TestMonitoringSettings:
      type: object
      properties:
        activationGracePeriod:
          type: string
        activationTimeUnit:
          type: string
        activationTimeWindow:
          type: string
        activationTimes:
          type: string
        notificationChannels:
          type: array
          items:
            type: string
    v202101beta1TestPingSettings:
      type: object
      properties:
        period:
          type: number
          format: float
        count:
          type: number
          format: float
        expiry:
          type: number
          format: float
        delay:
          type: number
          format: float
    v202101beta1TestSettings:
      type: object
      properties:
        applicationMesh:
          type: object
        hostname:
          $ref: "#/components/schemas/v202101beta1HostnameTest"
        ip:
          $ref: "#/components/schemas/v202101beta1IpTest"
        agent:
          $ref: "#/components/schemas/v202101beta1AgentTest"
        flow:
          $ref: "#/components/schemas/v202101beta1FlowTest"
        site:
          $ref: "#/components/schemas/v202101beta1SiteTest"
        tag:
          $ref: "#/components/schemas/v202101beta1TagTest"
        dns:
          $ref: "#/components/schemas/v202101beta1DnsTest"
        url:
          $ref: "#/components/schemas/v202101beta1UrlTest"
        networkGrid:
          $ref: "#/components/schemas/v202101beta1GridTest"
        pageLoad:
          $ref: "#/components/schemas/v202101beta1UrlTest"
        dnsGrid:
          $ref: "#/components/schemas/v202101beta1GridTest"
        agentIds:
          type: array
          items:
            type: string
        period:
          type: integer
          format: int64
        count:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        limit:
          type: integer
          format: int64
        tasks:
          type: array
          items:
            type: string
        healthSettings:
          $ref: "#/components/schemas/v202101beta1HealthSettings"
        monitoringSettings:
          $ref: "#/components/schemas/v202101beta1TestMonitoringSettings"
        ping:
          $ref: "#/components/schemas/v202101beta1TestPingSettings"
        trace:
          $ref: "#/components/schemas/v202101beta1TestTraceSettings"
        port:
          type: integer
          format: int64
        protocol:
          type: string
        family:
          $ref: "#/components/schemas/v202101beta1IPFamily"
        servers:
          type: array
          items:
            type: string
        targetType:
          type: string
        targetValue:
          type: string
        useLocalIp:
          type: boolean
        reciprocal:
          type: boolean
        rollupLevel:
          type: integer
          format: int64
        http:
          $ref: "#/components/schemas/v202101beta1HTTPConfig"
    v202101beta1TestStatus:
      type: string
      enum:
        - TEST_STATUS_UNSPECIFIED
        - TEST_STATUS_ACTIVE
        - TEST_STATUS_PAUSED
        - TEST_STATUS_DELETED
      default: TEST_STATUS_UNSPECIFIED
    v202101beta1TestTraceSettings:
      type: object
      properties:
        period:
          type: number
          format: float
        count:
          type: number
          format: float
        protocol:
          type: string
        port:
          type: number
          format: float
        expiry:
          type: number
          format: float
        limit:
          type: number
          format: float
        delay:
          type: number
          format: float
    v202101beta1Trace:
      type: object
      properties:
        hops:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1TraceHop"
        target:
          type: string
        ips:
          type: array
          items:
            type: string
    v202101beta1TraceHop:
      type: object
      properties:
        agent:
          type: boolean
        agentId:
          type: string
        ttl:
          type: integer
          format: int32
        ip:
          type: string
        latencies:
          type: array
          items:
            type: string
            format: uint64
        timeout:
          type: boolean
    v202101beta1TraceTaskDefinition:
      type: object
      properties:
        target:
          type: string
        period:
          type: integer
          format: int64
        expiry:
          type: integer
          format: int64
        limit:
          type: integer
          format: int64
    v202101beta1TracerouteResult:
      type: object
      properties:
        time:
          type: string
          format: date-time
        traces:
          type: array
          items:
            $ref: "#/components/schemas/v202101beta1Trace"
    v202101beta1UrlTest:
      type: object
      properties:
        target:
          type: string
    v202101beta1UserInfo:
      type: object
      properties:
        id:
          type: string
        email:
          type: string
        fullName:
          type: string
